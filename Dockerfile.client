# Use the official Node.js image.
FROM node:18

# Install dependencies only when needed
FROM base AS deps

# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
#RUN apk add --no-cache libc6-compat
WORKDIR /usr/src/client

# Copy package.json and yarn.lock first to leverage Docker cache
COPY client/package.json client/yarn.lock client/ecosystem.config.js ./

# Install dependencies.
RUN yarn --frozen-lockfile

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /usr/src/client
COPY --from=deps /app/node_modules ./node_modules

# Install pm2 globally
RUN yarn global add pm2

# Copy app files.
COPY client .

# Build the Next.js app.
RUN yarn run build

FROM base AS runner
WORKDIR /usr/src/client

ENV NODE_ENV production
# Uncomment the following line in case you want to disable telemetry during runtime.
# ENV NEXT_TELEMETRY_DISABLED 1

# Expose the client port.
EXPOSE 3000

ENV PORT 3000

# Start the Next.js app with pm2-runtime
CMD ["pm2-runtime", "ecosystem.config.js"]